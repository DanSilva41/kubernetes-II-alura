ReplicaSet:
    "Estrutura que pode encapsular/gerenciar um ou mais pods"

    Desired pods vs Ready Pods

Deployment:
    -  Camada acima de um ReplicaSet
    -  Define ReplicaSets
    -  Gerenciar imagens, versionamentos com históricos

    * ReplicaSet são criados automaticamente quando um Deployment é criado.
    * Pods normalmente são criados através de Deployments, e não individualmente.

=== Persistência de dados ===

Volumes:
    - Volumes possuem ciclo de vida independente dos containers, porém, vinculados aos pods.
    - Volumes persistem dados de containers dentro de pods e permitem o compartilhamento de arquivo dentro dos pods

PersistentVolumes:
    - Persistem dados de pods como um todo
    - Possuem ciclo de vida independente de quaisquer outros recursos, inclusive pods
    - Independente do POD
    - Responsável por abstrair como o cloud provider armazena os dados

    * Que precisamos de um PersistentVolumeClaim para acessar um PersistentVolume

PersistentVolumeClaim:
    - Serve como passaporte para o POD acessar o PV

StorageClass:
    - Gerencia os discos e volumes dinamicamente

    O PersistentVolume é criado dinamicamente assim que um PVC é vinculado em um StorageClass

    Clusters possuem StorageClasses "default" e podem ser usados automaticamente se não definirmos qual será utilizado

StateFul Set:
    Destinados a POD's que precisam manter o seu estado.

    - Usam PersistentVolumeClaim e PersistentVolume para persistência de dados
    - Idenficação única para cada pod (o que ajuda caso seja recriado)

Probes:
    "Apesar do POD está saudável(ativo), nossa aplicação não responde como esperado! Como o Kubernetes pode
    saber que o container dentro do POD deve ser reiniciado?"

    Liveness Probe:
        Saber quando o nosso POD está pronto realmente para uso e garantiar uma prova de uso

    Readiness Probe:
        "O container dentro do nosso POD pode ainda não estar 100% pronto para receber requisições"
            (Ex.: scripts de inicialização)
    Startup Probe:
        "Às vezes, você precisa lidar com aplicativos legados que podem exigir um tempo de inicialização adicional na primeira inicialização.
        Nesses casos, pode ser complicado configurar os parâmetros de teste de atividade sem comprometer a resposta rápida aos deadlocks que motivaram tal teste.
        O truque é configurar uma investigação de inicialização com o mesmo comando, verificação de HTTP ou TCP, com um failureThreshold * periodSeconds suficiente para cobrir o pior caso de tempo de inicialização."

    